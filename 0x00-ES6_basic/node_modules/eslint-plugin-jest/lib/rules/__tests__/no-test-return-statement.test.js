"use strict";

var _utils = require("@typescript-eslint/utils");
var _dedent = _interopRequireDefault(require("dedent"));
var _noTestReturnStatement = _interopRequireDefault(require("../no-test-return-statement"));
var _testUtils = require("./test-utils");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
const ruleTester = new _utils.TSESLint.RuleTester({
  parser: _testUtils.espreeParser,
  parserOptions: {
    ecmaVersion: 2015
  }
});
ruleTester.run('no-test-return-statement', _noTestReturnStatement.default, {
  valid: ['it("noop", function () {});', 'test("noop", () => {});', 'test("one", () => expect(1).toBe(1));', 'test("empty")', (0, _dedent.default)`
      test("one", () => {
        expect(1).toBe(1);
      });
    `, (0, _dedent.default)`
      it("one", function () {
        expect(1).toBe(1);
      });
    `, (0, _dedent.default)`
      it("one", myTest);
      function myTest() {
        expect(1).toBe(1);
      }
    `, (0, _dedent.default)`
      it("one", () => expect(1).toBe(1));
      function myHelper() {}
    `],
  invalid: [{
    code: (0, _dedent.default)`
        test("one", () => {
          return expect(1).toBe(1);
        });
      `,
    errors: [{
      messageId: 'noReturnValue',
      column: 3,
      line: 2
    }]
  }, {
    code: (0, _dedent.default)`
        it("one", function () {
          return expect(1).toBe(1);
        });
      `,
    errors: [{
      messageId: 'noReturnValue',
      column: 3,
      line: 2
    }]
  }, {
    code: (0, _dedent.default)`
        it.skip("one", function () {
          return expect(1).toBe(1);
        });
      `,
    errors: [{
      messageId: 'noReturnValue',
      column: 3,
      line: 2
    }]
  }, {
    code: (0, _dedent.default)`
        it.each\`\`("one", function () {
          return expect(1).toBe(1);
        });
      `,
    errors: [{
      messageId: 'noReturnValue',
      column: 3,
      line: 2
    }]
  }, {
    code: (0, _dedent.default)`
        it.each()("one", function () {
          return expect(1).toBe(1);
        });
      `,
    errors: [{
      messageId: 'noReturnValue',
      column: 3,
      line: 2
    }]
  }, {
    code: (0, _dedent.default)`
        it.only.each\`\`("one", function () {
          return expect(1).toBe(1);
        });
      `,
    errors: [{
      messageId: 'noReturnValue',
      column: 3,
      line: 2
    }]
  }, {
    code: (0, _dedent.default)`
        it.only.each()("one", function () {
          return expect(1).toBe(1);
        });
      `,
    errors: [{
      messageId: 'noReturnValue',
      column: 3,
      line: 2
    }]
  }, {
    code: (0, _dedent.default)`
        it("one", myTest);
        function myTest () {
          return expect(1).toBe(1);
        }
      `,
    errors: [{
      messageId: 'noReturnValue',
      column: 3,
      line: 3
    }]
  }]
});