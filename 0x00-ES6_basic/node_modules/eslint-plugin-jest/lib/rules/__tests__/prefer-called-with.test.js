"use strict";

var _utils = require("@typescript-eslint/utils");
var _preferCalledWith = _interopRequireDefault(require("../prefer-called-with"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
const ruleTester = new _utils.TSESLint.RuleTester();
ruleTester.run('prefer-called-with', _preferCalledWith.default, {
  valid: ['expect(fn).toBeCalledWith();', 'expect(fn).toHaveBeenCalledWith();', 'expect(fn).toBeCalledWith(expect.anything());', 'expect(fn).toHaveBeenCalledWith(expect.anything());', 'expect(fn).not.toBeCalled();', 'expect(fn).rejects.not.toBeCalled();', 'expect(fn).not.toHaveBeenCalled();', 'expect(fn).not.toBeCalledWith();', 'expect(fn).not.toHaveBeenCalledWith();', 'expect(fn).resolves.not.toHaveBeenCalledWith();', 'expect(fn).toBeCalledTimes(0);', 'expect(fn).toHaveBeenCalledTimes(0);', 'expect(fn);'],
  invalid: [{
    code: 'expect(fn).toBeCalled();',
    errors: [{
      messageId: 'preferCalledWith',
      data: {
        matcherName: 'toBeCalled'
      },
      column: 12,
      line: 1
    }]
  }, {
    code: 'expect(fn).resolves.toBeCalled();',
    errors: [{
      messageId: 'preferCalledWith',
      data: {
        matcherName: 'toBeCalled'
      },
      column: 21,
      line: 1
    }]
  }, {
    code: 'expect(fn).toHaveBeenCalled();',
    errors: [{
      messageId: 'preferCalledWith',
      data: {
        matcherName: 'toHaveBeenCalled'
      },
      column: 12,
      line: 1
    }]
  }]
});