"use strict";

var _utils = require("@typescript-eslint/utils");
var _preferStrictEqual = _interopRequireDefault(require("../prefer-strict-equal"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
const ruleTester = new _utils.TSESLint.RuleTester();
ruleTester.run('prefer-strict-equal', _preferStrictEqual.default, {
  valid: ['expect(something).toStrictEqual(somethingElse);', "a().toEqual('b')", 'expect(a);'],
  invalid: [{
    code: 'expect(something).toEqual(somethingElse);',
    errors: [{
      messageId: 'useToStrictEqual',
      column: 19,
      line: 1,
      suggestions: [{
        messageId: 'suggestReplaceWithStrictEqual',
        output: 'expect(something).toStrictEqual(somethingElse);'
      }]
    }]
  }, {
    code: 'expect(something).toEqual(somethingElse,);',
    parserOptions: {
      ecmaVersion: 2017
    },
    errors: [{
      messageId: 'useToStrictEqual',
      column: 19,
      line: 1,
      suggestions: [{
        messageId: 'suggestReplaceWithStrictEqual',
        output: 'expect(something).toStrictEqual(somethingElse,);'
      }]
    }]
  }, {
    code: 'expect(something)["toEqual"](somethingElse);',
    errors: [{
      messageId: 'useToStrictEqual',
      column: 19,
      line: 1,
      suggestions: [{
        messageId: 'suggestReplaceWithStrictEqual',
        output: "expect(something)['toStrictEqual'](somethingElse);"
      }]
    }]
  }]
});